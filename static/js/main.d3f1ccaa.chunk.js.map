{"version":3,"sources":["components/MobileBlocks.js","components/MobileBlocksData.js","components/CircularDeterminate.js","components/TempDrawer.js","components/App.js","registerServiceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","button","margin","spacing","input","display","card","maxWidth","minHeight","overflow","cardAdded","backgroundColor","cardRemoved","cardHidden","cardUnHidden","ButtonBase","color","AvatarButton","fontSize","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatarRed","red","avatarWhite","avatarDessert","avatarCorovan","avatarSparkling","lister","listStyleType","MobileBlocks","data","onSelect","hideRemoved","unHideHidden","onCoravinSearch","unHideHiddenClick","vinyard1","status","classes","React","useState","expanded","setExpanded","Card","className","key","_id","raised","CardHeader","avatar","Avatar","aria-label","colorz","value","id","onClick","event","charAt","toUpperCase","upperCaseFirstLetterForColor","title","name","subheader","vinyard","string","CardContent","Typography","variant","component","coravin","coravinCheck","year","grapes","place","area","country","mise","price","CardActions","disableSpacing","IconButton","clsx","aria-expanded","Collapse","in","timeout","unmountOnExit","paragraph","grape","map","result","index","description","appellation","funfact","MobileBlocksData","glasses","cells","progress","CircularDeterminate","setProgress","useEffect","timer","setInterval","oldProgress","clearInterval","CircularProgress","list","width","fullList","TemporaryDrawer","props","top","menu","bottom","howto","state","setState","onClear","onSearchSelect","onSort","hideRemovedClick","onRemoveFilterTerms","filterTerms","hideUnhideRemoved","setHideUnhideRemoved","changeHideRemoved","hideUnhideHidden","setHideUnhideHidden","changeHideHidden","checkIfCoravinName","toggleDrawer","anchor","open","type","role","onKeyDown","List","ListItem","Divider","Fragment","Button","Drawer","onClose","searchBox","placeholder","allInfo","e","Chip","label","onDelete","handleDelete","size","App","callBackendAPI","a","fetch","response","json","body","Error","message","target","unFilteredWines","filterTermsWithId1","filterTermsWithId","newTerm","push","uniqueTerms1","Set","termsToArray1","uniqueTerms","termsToArray","capitilize","element","array","filterWineOnClick","forEach","grapeList","i","length","unshift","console","log","glassesList","filter","item","filterNulls","difference","x","includes","filteredWines","newFilterTermsWithId","newFilterTerms","stringer","toString","newTermArray","newIdArray","filterCoravin","termy","sorted","sort","b","colorA","colorB","order","removed","added","none","hidden","bind","this","then","res","glassesData","express","allSearchableData","descAndGrape","allInfo0","flat","Infinity","descAndGrapeArray","concat","thing","self","findIndex","t","mappedGlasses","catch","err","unFilteredWines1","wines","curItem","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.d3f1ccaa.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport { string } from \"prop-types\";\r\n\r\n// import MobileBar from \"./MobileBar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  card: {\r\n    maxWidth: 345,\r\n    display: \"inline-block\",\r\n    minHeight: 436,\r\n    overflow: \"hidden\",\r\n  },\r\n  cardAdded: {\r\n    maxWidth: 345,\r\n    backgroundColor: \"#E6E6FA\",\r\n    display: \"inline-block\",\r\n    minHeight: 436,\r\n    overflow: \"hidden\",\r\n  },\r\n  cardRemoved: {\r\n    maxWidth: 345,\r\n    backgroundColor: \"#FFA07A\",\r\n    display: \"inline-block\",\r\n    minHeight: 436,\r\n    overflow: \"hidden\",\r\n  },\r\n\r\n  cardHidden: {\r\n    maxWidth: 345,\r\n    backgroundColor: \"yellow\",\r\n    display: \"inline-block\",\r\n    minHeight: 436,\r\n    overflow: \"hidden\",\r\n    display: \"none\",\r\n  },\r\n  cardUnHidden: {\r\n    maxWidth: 345,\r\n    backgroundColor: \"yellow\",\r\n    display: \"inline-block\",\r\n    minHeight: 436,\r\n    overflow: \"hidden\",\r\n  },\r\n  ButtonBase: {\r\n    color: \"blue\",\r\n  },\r\n  AvatarButton: {\r\n    fontSize: \"1em\",\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n  avatarRed: {\r\n    backgroundColor: red[500],\r\n  },\r\n  avatarWhite: {\r\n    backgroundColor: \"black\",\r\n  },\r\n  avatarDessert: {\r\n    backgroundColor: \"yellow\",\r\n    color: \"black\",\r\n  },\r\n  avatarCorovan: {\r\n    backgroundColor: \"green\",\r\n  },\r\n  avatarSparkling: {\r\n    backgroundColor: \"blue\",\r\n  },\r\n\r\n  lister: {\r\n    listStyleType: \"none\",\r\n  },\r\n}));\r\n\r\nconst MobileBlocks = ({\r\n  data,\r\n  onSelect,\r\n  hideRemoved,\r\n  onCoravinSearch,\r\n  unHideHiddenClick,\r\n  unHideHidden,\r\n}) => {\r\n  const grapes = \"grapes\";\r\n  const year = \"year\";\r\n  const place = \"place\";\r\n  const area = \"area\";\r\n  const country = \"country\";\r\n  const appellation = \"appellation\";\r\n  const grape = \"grape\";\r\n  const description = \"description\";\r\n  const vinyard = \"vinyard\";\r\n  const color = \"color\";\r\n  const mise = \"mise\";\r\n  const coravin = \"coravin\";\r\n\r\n  const upperCaseFirstLetter = (str) =>\r\n    str.replace(/\\b[a-z]/g, (char) => char.toUpperCase());\r\n\r\n  const upperCaseFirstLetterForColor = (color) => {\r\n    var str = color.charAt(0);\r\n    return str.toUpperCase();\r\n    //check to see if needed in admin mode\r\n  };\r\n\r\n  const checkStatus = (status) => {\r\n    if (status === \"added\") {\r\n      return classes.cardAdded;\r\n    } else if (status === \"removed\" && !hideRemoved) {\r\n      return classes.cardRemoved;\r\n    } else if (status === \"removed\" && hideRemoved) {\r\n      return classes.cardHidden;\r\n    } else if (status === \"hidden\" && !unHideHidden) {\r\n      return classes.cardHidden;\r\n    } else if (status === \"hidden\" && unHideHidden) {\r\n      return classes.cardUnHidden;\r\n    } else {\r\n      return classes.card;\r\n    }\r\n  };\r\n  const colorz = (color) => {\r\n    if (color === \"red\") {\r\n      return classes.avatarRed;\r\n    } else if (color === \"white\") {\r\n      return classes.avatarWhite;\r\n    } else if (color === \"dessert\") {\r\n      return classes.avatarDessert;\r\n    } else if (color === \"corovan\") {\r\n      return classes.avatarCorovan;\r\n    } else {\r\n      return classes.avatarSparkling;\r\n    }\r\n  };\r\n\r\n  //to get the subheader as a button\r\n  let vinyard2;\r\n  function vinny(vinyard1) {\r\n    if (vinyard1 === string) {\r\n      vinyard2 = vinyard1.toUpperCase();\r\n    }\r\n    return (\r\n      <ButtonBase\r\n        className={classes.ButtonBase}\r\n        id={vinyard}\r\n        value={vinyard1}\r\n        onClick={(event) => onSelect(event)}\r\n      >\r\n        {vinyard1}\r\n      </ButtonBase>\r\n    );\r\n  }\r\n  function coravinCheck(coravin) {\r\n    if (coravin === true) {\r\n      return \"coravin\";\r\n    } else {\r\n      return \"non-coravin\";\r\n    }\r\n  }\r\n\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  return (\r\n    <Card className={checkStatus(data.status)} key={data._id} raised>\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar aria-label=\"recipe\" className={colorz(data.color)}>\r\n            <ButtonBase\r\n              value={data.color}\r\n              id={color}\r\n              onClick={(event) => onSelect(event)}\r\n              className={classes.AvatarButton}\r\n            >\r\n              {upperCaseFirstLetterForColor(data.color)}\r\n            </ButtonBase>\r\n          </Avatar>\r\n        }\r\n        title={data.name}\r\n        subheader={vinny(data.vinyard)}\r\n      />\r\n\r\n      {/* for images */}\r\n      {/* <CardMedia\r\n        className={classes.media}\r\n        image={`https://josephbeckcastro.com/site4/images/${data.picture}.jpg`}\r\n        title={data.name}\r\n      /> */}\r\n\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          A {\"\"}\r\n          <ButtonBase\r\n            className={classes.ButtonBase}\r\n            id={coravin}\r\n            onClick={(event) => onSelect(event)}\r\n            value={data.coravin}\r\n          >\r\n            {coravinCheck(data.coravin)}\r\n          </ButtonBase>{\" \"}\r\n          <ButtonBase\r\n            className={classes.ButtonBase}\r\n            value={data.year}\r\n            id={year}\r\n            onClick={(event) => onSelect(event)}\r\n          >\r\n            {data.year}\r\n          </ButtonBase>{\" \"}\r\n          <ButtonBase\r\n            className={classes.ButtonBase}\r\n            component=\"button\"\r\n            value={data.grapes}\r\n            id={grapes}\r\n            onClick={(event) => onSelect(event)}\r\n          >\r\n            {data.grapes}\r\n          </ButtonBase>{\" \"}\r\n          from{\" \"}\r\n          <ButtonBase\r\n            className={classes.ButtonBase}\r\n            value={data.place}\r\n            id={place}\r\n            onClick={(event) => onSelect(event)}\r\n          >\r\n            {data.place}\r\n          </ButtonBase>{\" \"}\r\n          <ButtonBase\r\n            className={classes.ButtonBase}\r\n            value={data.area}\r\n            id={area}\r\n            onClick={(event) => onSelect(event)}\r\n          >\r\n            {data.area}\r\n          </ButtonBase>{\" \"}\r\n          in {\"\"}\r\n          <ButtonBase\r\n            className={classes.ButtonBase}\r\n            value={data.country}\r\n            id={country}\r\n            onClick={(event) => onSelect(event)}\r\n          >\r\n            {data.country}\r\n          </ButtonBase>{\" \"}\r\n          served in a{\" \"}\r\n          <ButtonBase\r\n            className={classes.ButtonBase}\r\n            value={data.mise}\r\n            id={mise}\r\n            onClick={(event) => onSelect(event)}\r\n          >\r\n            {data.mise}\r\n          </ButtonBase>{\" \"}\r\n          for ${data.price}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        <IconButton\r\n          className={clsx(classes.expand, {\r\n            [classes.expandOpen]: expanded,\r\n          })}\r\n          onClick={handleExpandClick}\r\n          aria-expanded={expanded}\r\n          aria-label=\"show more\"\r\n        >\r\n          <ExpandMoreIcon />\r\n        </IconButton>\r\n      </CardActions>\r\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n        <CardContent>\r\n          <Typography paragraph>\r\n            Grapes:{\" \"}\r\n            {data.grape.map((result, index) => (\r\n              <li key={index}>\r\n                <ButtonBase\r\n                  className={classes.ButtonBase}\r\n                  id={grape}\r\n                  value={result}\r\n                  onClick={(event) => onSelect(event)}\r\n                >\r\n                  {result}\r\n                </ButtonBase>\r\n              </li>\r\n            ))}\r\n          </Typography>\r\n          <Typography paragraph>\r\n            Descriptions:{\" \"}\r\n            {data.description.map((result, index) => (\r\n              <li key={index}>\r\n                <ButtonBase\r\n                  className={classes.ButtonBase}\r\n                  id={description}\r\n                  value={result}\r\n                  onClick={(event) => onSelect(event)}\r\n                >\r\n                  {result}\r\n                </ButtonBase>\r\n              </li>\r\n            ))}\r\n          </Typography>\r\n\r\n          <Typography paragraph>\r\n            Appellation:{\" \"}\r\n            <ButtonBase\r\n              className={classes.ButtonBase}\r\n              value={data.appellation}\r\n              id={appellation}\r\n              onClick={(event) => onSelect(event)}\r\n            >\r\n              {data.appellation}\r\n            </ButtonBase>\r\n          </Typography>\r\n          <Typography paragraph>Fun Fact: {data.funfact}</Typography>\r\n        </CardContent>\r\n      </Collapse>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default MobileBlocks;\r\n","import React from \"react\";\r\nimport MobileBlocks from \"./MobileBlocks\";\r\n\r\nconst MobileBlocksData = ({ onSelect, glasses, hideRemoved }) => {\r\n  const data = glasses;\r\n\r\n  const cells = data.map(data => {\r\n    return (\r\n      <MobileBlocks\r\n        data={data}\r\n        key={data._id}\r\n        onSelect={onSelect}\r\n        hideRemoved={hideRemoved}\r\n      />\r\n    );\r\n  });\r\n\r\n  return <div className=\"MobileBlock\">{cells}</div>;\r\n};\r\nexport default MobileBlocksData;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  progress: {\r\n    margin: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nexport default function CircularDeterminate() {\r\n  const classes = useStyles();\r\n  const [progress, setProgress] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    function tick() {\r\n      // reset when reaching 100%\r\n      setProgress(oldProgress => (oldProgress >= 100 ? 0 : oldProgress + 1));\r\n    }\r\n\r\n    const timer = setInterval(tick, 20);\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <CircularProgress\r\n        className={classes.progress}\r\n        variant=\"determinate\"\r\n        value={progress}\r\n        color=\"secondary\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport ReactSearchBox from \"react-search-box\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport \"./styles/App.css\";\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: \"auto\",\r\n  },\r\n});\r\n\r\nexport default function TemporaryDrawer(props) {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    top: false,\r\n    menu: false,\r\n    bottom: false,\r\n    howto: false,\r\n  });\r\n\r\n  const onClear = props.onClear;\r\n  const onSearchSelect = props.onSearchSelect;\r\n  const onSort = props.onSort;\r\n  const hideRemovedClick = props.hideRemovedClick;\r\n  const unHideHiddenClick = props.unHideHiddenClick;\r\n  const onRemoveFilterTerms = props.onRemoveFilterTerms;\r\n  let filterTerms = props.filterTerms;\r\n  const onSelect = props.onSelect;\r\n  const color = \"color\";\r\n  const status = \"status\";\r\n  const [hideUnhideRemoved, setHideUnhideRemoved] = React.useState(false);\r\n  const handleDelete = (result) => {\r\n    onRemoveFilterTerms(result);\r\n  };\r\n  const changeHideRemoved = (event) => {\r\n    hideRemovedClick();\r\n    setHideUnhideRemoved(!hideUnhideRemoved);\r\n  };\r\n\r\n  const displayHideRemoved = () => {\r\n    if (hideUnhideRemoved == false) {\r\n      return \"Hide Removed\";\r\n    } else {\r\n      return \"Show Removed\";\r\n    }\r\n  };\r\n  const [hideUnhideHidden, setHideUnhideHidden] = React.useState(true);\r\n  const changeHideHidden = (event) => {\r\n    unHideHiddenClick();\r\n    setHideUnhideHidden(!hideUnhideHidden);\r\n  };\r\n  const displayHideHidden = () => {\r\n    if (hideUnhideHidden == false) {\r\n      return \"Show Retired\";\r\n    } else {\r\n      return \"Hide Retired\";\r\n    }\r\n  };\r\n\r\n  const checkIfCoravinName = (result) => {\r\n    if (result == \"TRUE\") {\r\n      return \"coravin\";\r\n    } else if (result == \"FALSE\") {\r\n      return \"non-coravin\";\r\n    } else {\r\n      return result;\r\n    }\r\n  };\r\n  const [howTo, setHowTo] = React.useState(false);\r\n  const handleHowToClick = () => {\r\n    setHowTo(!howTo);\r\n  };\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const list = (anchor) => (\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === \"top\" || anchor === \"bottom\",\r\n      })}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <List>\r\n        Sort By:\r\n        <ListItem button onClick={(event) => onSort(event)} id={color}>\r\n          Color\r\n        </ListItem>\r\n        <ListItem button onClick={(event) => onSort(event)} id={status}>\r\n          Status\r\n        </ListItem>\r\n      </List>\r\n      <Divider />\r\n      <Divider />\r\n      <Divider />\r\n      <List>\r\n        Hide Items:\r\n        <ListItem button onClick={changeHideRemoved}>\r\n          {displayHideRemoved()}\r\n        </ListItem>\r\n        <ListItem button onClick={changeHideHidden}>\r\n          {displayHideHidden()}\r\n        </ListItem>\r\n      </List>\r\n      <Divider />\r\n      <Divider />\r\n      <Divider />\r\n      <List>\r\n        Clear:\r\n        <ListItem button onClick={onClear}>\r\n          Clear Filters\r\n        </ListItem>\r\n      </List>\r\n      <Divider />\r\n      <Divider />\r\n      <Divider />\r\n      <List>\r\n        How To:<br></br> D = Dessert<br></br> R = Red <br></br>S = Sparkling{\" \"}\r\n        <br></br>W = White <br></br>Click on a button to sort\r\n        {/* <ListItem button onClick={handleHowToClick}>\r\n          {howTo\r\n            ? \"Doggo ipsum what a nice floof doggorino ruff floofs heck you are doing me a frighten, mlem pats floofs. Such treat puggorino very jealous pupper bork, vvv very good spot. Ruff long bois yapper I am bekom fat, dat tungg tho. Boof noodle horse most angery pupper I have ever seen thicc, length boy clouds. wrinkler fluffer. Shooberino I am bekom fat wrinkler pupperino ur givin me a spook lotsa pats, porgo shibe wow very biscit most angery pupper I have ever seen.\"\r\n            : \"click hgere\"}\r\n        </ListItem> */}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"TempDrawer\">\r\n      {[\"menu\"].map((anchor) => (\r\n        <React.Fragment key={anchor}>\r\n          <Button onClick={toggleDrawer(anchor, true)}>{anchor}</Button>\r\n          <Drawer\r\n            anchor={anchor}\r\n            open={state[anchor]}\r\n            onClose={toggleDrawer(anchor, false)}\r\n          >\r\n            {list(anchor)}\r\n          </Drawer>\r\n        </React.Fragment>\r\n      ))}\r\n\r\n      <ReactSearchBox\r\n        className={classes.searchBox}\r\n        placeholder=\"Search\"\r\n        data={props.allInfo}\r\n        onSelect={(e) => onSearchSelect(e)}\r\n      />\r\n\r\n      {filterTerms.map((result, index) => (\r\n        <ul className=\"list\">\r\n          <li key={index}>\r\n            <Chip\r\n              label={checkIfCoravinName(result)}\r\n              onDelete={() => handleDelete(result)}\r\n              variant=\"outlined\"\r\n              value={result}\r\n              size=\"small\"\r\n            />\r\n          </li>\r\n        </ul>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component, useState } from \"react\";\r\nimport \"./styles/App.css\";\r\n// import MobileBar from \"./MobileBar\";\r\nimport MobileBlocksData from \"./MobileBlocksData\";\r\nimport CircularDeterminate from \"./CircularDeterminate\";\r\n\r\nimport { Drawer } from \"@material-ui/core\";\r\nimport TempDrawer from \"./TempDrawer\";\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      glasses: [],\r\n      filteredWines: [],\r\n      allInfo: [],\r\n      hideRemoved: false,\r\n      unHideHidden: true,\r\n      unFilteredWines: [],\r\n      filterTerms: [],\r\n      filterTermsWithId: [],\r\n    };\r\n\r\n    this.onSelect = this.onSelect.bind(this);\r\n    this.onRemoveFilterTerms = this.onRemoveFilterTerms.bind(this);\r\n    this.onCoravinSearch = this.onCoravinSearch.bind(this);\r\n    this.onSearchSelect = this.onSearchSelect.bind(this);\r\n    this.onClear = this.onClear.bind(this);\r\n    this.onSort = this.onSort.bind(this);\r\n    this.hideRemovedClick = this.hideRemovedClick.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Call our fetch function below once the component mounts\r\n    this.callBackendAPI()\r\n\r\n      .then((res) => {\r\n        const glassesData = res.express;\r\n        const order = {\r\n          removed: 1,\r\n          added: 2,\r\n          none: 3,\r\n          hidden: 4,\r\n        };\r\n        glassesData.sort((a, b) => order[a.status] - order[b.status]);\r\n        this.setState({ glasses: glassesData });\r\n        this.setState({ unFilteredWines: glassesData });\r\n\r\n        let allSearchableData = glassesData.map((result) => {\r\n          return [\r\n            {\r\n              value: result.name,\r\n              id: \"name\",\r\n              key: \"\",\r\n            },\r\n            {\r\n              value: result.place,\r\n              id: \"place\",\r\n              key: \"\",\r\n            },\r\n            {\r\n              value: result.added,\r\n              id: \"added\",\r\n              key: \"\",\r\n            },\r\n            {\r\n              value: result.appellation,\r\n              id: \"appellation\",\r\n              key: \"\",\r\n            },\r\n            {\r\n              value: result.color,\r\n              id: \"color\",\r\n              key: \"\",\r\n            },\r\n            {\r\n              value: result.country,\r\n              id: \"country\",\r\n              key: \"\",\r\n            },\r\n            {\r\n              value: result.description,\r\n              id: \"description\",\r\n              key: \"\",\r\n            },\r\n            {\r\n              value: result.grapes,\r\n              id: \"grapes\",\r\n              key: \"\",\r\n            },\r\n            {\r\n              value: result.grape,\r\n              id: \"grape\",\r\n              key: \"\",\r\n            },\r\n            {\r\n              value: result.mise,\r\n              id: \"mise\",\r\n              key: \"\",\r\n            },\r\n            {\r\n              value: result.status,\r\n              id: \"status\",\r\n              key: \"\",\r\n            },\r\n            {\r\n              value: result.vinyard,\r\n              id: \"vinyard\",\r\n              key: \"\",\r\n            },\r\n            {\r\n              value: result.year,\r\n              id: \"year\",\r\n              key: \"\",\r\n            },\r\n          ];\r\n        });\r\n        let descAndGrape = [];\r\n        const allInfo0 = allSearchableData.flat(Infinity);\r\n        allInfo0.map((item) => {\r\n          if (item.id == \"description\") {\r\n            descAndGrape.unshift(\r\n              item.value.map((result) => [\r\n                {\r\n                  value: result,\r\n                  id: \"description\",\r\n                  key: \"\",\r\n                },\r\n              ])\r\n            );\r\n          }\r\n        });\r\n        allInfo0.map((item) => {\r\n          if (item.id == \"grape\") {\r\n            descAndGrape.unshift(\r\n              item.value.map((result) => [\r\n                {\r\n                  value: result,\r\n                  id: \"grape\",\r\n                  key: \"\",\r\n                },\r\n              ])\r\n            );\r\n          }\r\n        });\r\n\r\n        const descAndGrapeArray = descAndGrape.flat(Infinity);\r\n        const allInfo19 = allInfo0.concat(descAndGrapeArray);\r\n        //make one array from many\r\n\r\n        //filter out non strings\r\n        const allInfo1 = allInfo19.filter((item) => {\r\n          return typeof item.value === \"string\";\r\n        });\r\n        const allInfo2 = allInfo1.filter(\r\n          (thing, index, self) =>\r\n            index ===\r\n            self.findIndex((t) => t.value === thing.value && t.id === thing.id)\r\n        );\r\n        //filter out strings that have no characters\r\n        const allInfo3 = allInfo2.filter((result) => {\r\n          return result.value.length > 0;\r\n        });\r\n        //give items keys\r\n        const allInfo = allInfo3.map((value, index) => {\r\n          return {\r\n            key: index.toString(),\r\n            value: value.value,\r\n            id: value.id,\r\n          };\r\n        });\r\n\r\n        this.setState({ allInfo: allInfo });\r\n        const glasses = this.state.glasses;\r\n        const mappedGlasses = glasses.map((result) => (\r\n          <li key={result._id}>{result}</li>\r\n        ));\r\n        this.setState({ mappedGlasses: mappedGlasses });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n  // Fetches our GET route from the Express server.\r\n  //(Note the route we are fetching matches the GET route from server.js\r\n  callBackendAPI = async () => {\r\n    const response = await fetch(\"https://admin-back.herokuapp.com/api\");\r\n    const body = await response.json();\r\n\r\n    if (response.status !== 200) {\r\n      throw Error(body.message);\r\n    }\r\n    return body;\r\n  };\r\n\r\n  //filter to just wines that have the features ie certain grapes,\r\n  // area, etc\r\n  onSelect = (e) => {\r\n    let id = e.target.id;\r\n    let value1 = e.target.value;\r\n    let value = value1.toUpperCase();\r\n\r\n    let unFilteredWines = this.state.unFilteredWines;\r\n\r\n    let filterTermsWithId1 = this.state.filterTermsWithId;\r\n    let newTerm = { id: id, value: value };\r\n\r\n    filterTermsWithId1.push(newTerm);\r\n    const uniqueTerms1 = new Set(filterTermsWithId1);\r\n    const termsToArray1 = [...uniqueTerms1];\r\n    // console.log(termsToArray1);\r\n\r\n    const glasses = this.state.glasses;\r\n    let filterTerms = this.state.filterTerms;\r\n    function filterNulls(item) {\r\n      if (typeof item === \"string\") {\r\n        return item.toUpperCase();\r\n      }\r\n    }\r\n\r\n    filterTerms.push(value);\r\n    const uniqueTerms = new Set(filterTerms);\r\n    const termsToArray = [...uniqueTerms];\r\n\r\n    let capitilize = function (element, index, array) {\r\n      return element.toUpperCase();\r\n    };\r\n\r\n    let filterWineOnClick = [];\r\n    if (id == \"grape\") {\r\n      let glassesList = glasses;\r\n\r\n      glassesList.forEach(function (e) {\r\n        let grapeList = e.grape.map(capitilize);\r\n        for (let i = 0; i < grapeList.length; i++) {\r\n          if (grapeList[i] === value) {\r\n            filterWineOnClick.unshift(e);\r\n          }\r\n        }\r\n      });\r\n      console.log(\"grape\" + filterWineOnClick);\r\n    } else if (id == \"description\") {\r\n      let glassesList = glasses;\r\n\r\n      glassesList.forEach(function (e) {\r\n        let grapeList = e.description.map(capitilize);\r\n        for (let i = 0; i < grapeList.length; i++) {\r\n          if (grapeList[i] === value) {\r\n            filterWineOnClick.unshift(e);\r\n          }\r\n        }\r\n      });\r\n      console.log(\"desc\" + filterWineOnClick);\r\n    } else if (id == \"coravin\") {\r\n      let glassesList = glasses;\r\n      if (value === \"TRUE\") {\r\n        filterWineOnClick = glassesList.filter(\r\n          (result) => result.coravin == true\r\n        );\r\n      } else {\r\n        filterWineOnClick = glassesList.filter(\r\n          (result) => result.coravin !== true\r\n        );\r\n      }\r\n    } else {\r\n      let glassesList = glasses;\r\n      filterWineOnClick = glassesList.filter(\r\n        (result) => filterNulls(result[id]) == value\r\n      );\r\n    }\r\n    let difference = unFilteredWines.filter(\r\n      (x) => !filterWineOnClick.includes(x)\r\n    );\r\n\r\n    this.setState({ filterTerms: termsToArray });\r\n    this.setState({ glasses: filterWineOnClick });\r\n    this.setState({ filterTermsWithId: termsToArray1 });\r\n    this.setState({ filteredWines: difference });\r\n  };\r\n  ///\r\n\r\n  onRemoveFilterTerms = (result) => {\r\n    let newFilterTermsWithId = this.state.filterTermsWithId;\r\n    let newFilterTerms = this.state.filterTerms;\r\n    let filteredWines = this.state.filteredWines;\r\n    let stringer = result.toString();\r\n\r\n    let unFilteredWines = this.state.unFilteredWines;\r\n    let glasses = this.state.glasses;\r\n\r\n    let newTermArray = newFilterTerms.filter(\r\n      (item) => item.toString() !== stringer\r\n    );\r\n    let newIdArray = newFilterTermsWithId.filter(\r\n      (item) => item.value !== result\r\n    );\r\n\r\n    let removedTermWithId = newFilterTermsWithId.filter(\r\n      (item) => item.value === result\r\n    );\r\n\r\n    this.setState({ filterTermsWithId: newIdArray });\r\n    this.setState({ filterTerms: newTermArray });\r\n    let capitilize = function (element, index, array) {\r\n      return element.toUpperCase();\r\n    };\r\n    function filterNulls(item) {\r\n      if (typeof item === \"string\") {\r\n        return item.toUpperCase();\r\n      }\r\n    }\r\n\r\n    let filterWineOnClick = [];\r\n    let newTermArrayLength = newTermArray.length;\r\n\r\n    if (newTermArrayLength == 0) {\r\n      filterWineOnClick = unFilteredWines;\r\n      this.setState({ glasses: filterWineOnClick });\r\n    }\r\n\r\n    ////////////////////////////\r\n    //////////////\r\n    else {\r\n      newIdArray.forEach(function (item) {\r\n        let id = item.id;\r\n        let value = item.value;\r\n        if (id == \"grape\") {\r\n          let glassesList = unFilteredWines;\r\n\r\n          glassesList.forEach(function (e) {\r\n            let grapeList = e.grape.map(capitilize);\r\n            for (let i = 0; i < grapeList.length; i++) {\r\n              if (grapeList[i] === value) {\r\n                filterWineOnClick.unshift(e);\r\n              }\r\n            }\r\n          });\r\n          console.log(\"grape\" + filterWineOnClick);\r\n        } else if (id == \"description\") {\r\n          let glassesList = unFilteredWines;\r\n\r\n          glassesList.forEach(function (e) {\r\n            let grapeList = e.description.map(capitilize);\r\n            for (let i = 0; i < grapeList.length; i++) {\r\n              if (grapeList[i] === value) {\r\n                filterWineOnClick.unshift(e);\r\n              }\r\n            }\r\n          });\r\n          console.log(\"desc\" + filterWineOnClick);\r\n        } else if (id == \"coravin\") {\r\n          let glassesList = unFilteredWines;\r\n          if (value === \"TRUE\") {\r\n            filterWineOnClick = glassesList.filter(\r\n              (result) => result.coravin == true\r\n            );\r\n          } else {\r\n            filterWineOnClick = glassesList.filter(\r\n              (result) => result.coravin !== true\r\n            );\r\n          }\r\n        } else {\r\n          let glassesList = unFilteredWines;\r\n          filterWineOnClick = glassesList.filter(\r\n            (result) => filterNulls(result[id]) == value\r\n          );\r\n        }\r\n      });\r\n      let difference = unFilteredWines.filter(\r\n        (x) => !filterWineOnClick.includes(x)\r\n      );\r\n\r\n      this.setState({ glasses: filterWineOnClick });\r\n      this.setState({ filteredWines: difference });\r\n    }\r\n  };\r\n  ///\r\n  ///\r\n  ///\r\n  onCoravinSearch = (event) => {\r\n    let id = event.target.id;\r\n    let value = event.target.value;\r\n    let filterTerms = this.state.filterTerms;\r\n    const glasses = this.state.glasses;\r\n    if (value === \"true\") {\r\n      filterTerms.push(id);\r\n    } else if (value === \"false\") {\r\n      filterTerms.push(id);\r\n    }\r\n\r\n    // let filterTerms = this.state.filterTerms;\r\n\r\n    // console.log(value);\r\n\r\n    const filterCoravin = glasses.filter((result) => {\r\n      if (value === \"true\") {\r\n        // filterTermsWithId.push(newTerm);\r\n        return result.coravin === true;\r\n      }\r\n      if (value === \"false\") {\r\n        // filterTermsWithId.push(newTerm);\r\n        return result.coravin === false;\r\n      }\r\n    });\r\n    const uniqueTerms = new Set(filterTerms);\r\n    const termsToArray = [...uniqueTerms];\r\n    // // const uniqueTermsId = new Set(filterTermsWithId);\r\n    // // const termsToArrayId = [...uniqueTermsId];\r\n\r\n    this.setState({ glasses: filterCoravin });\r\n    this.setState({ filterTerms: termsToArray });\r\n    // this.setState({ filterTermsWithId: termsToArrayId });\r\n  };\r\n\r\n  //for selecting items on search v\r\n  onSearchSelect = (e) => {\r\n    let id = e.id;\r\n    let value1 = e.value;\r\n    let value = value1.toUpperCase();\r\n\r\n    let unFilteredWines = this.state.unFilteredWines;\r\n\r\n    let filterTermsWithId1 = this.state.filterTermsWithId;\r\n    let newTerm = { id: id, value: value };\r\n\r\n    filterTermsWithId1.push(newTerm);\r\n    const uniqueTerms1 = new Set(filterTermsWithId1);\r\n    const termsToArray1 = [...uniqueTerms1];\r\n    // console.log(termsToArray1);\r\n\r\n    const glasses = this.state.glasses;\r\n    let filterTerms = this.state.filterTerms;\r\n    function filterNulls(item) {\r\n      if (typeof item === \"string\") {\r\n        return item.toUpperCase();\r\n      }\r\n    }\r\n\r\n    filterTerms.push(value);\r\n    const uniqueTerms = new Set(filterTerms);\r\n    const termsToArray = [...uniqueTerms];\r\n\r\n    let capitilize = function (element, index, array) {\r\n      return element.toUpperCase();\r\n    };\r\n\r\n    let filterWineOnClick = [];\r\n    if (id == \"grape\") {\r\n      let glassesList = glasses;\r\n\r\n      glassesList.forEach(function (e) {\r\n        let grapeList = e.grape.map(capitilize);\r\n        for (let i = 0; i < grapeList.length; i++) {\r\n          if (grapeList[i] === value) {\r\n            filterWineOnClick.unshift(e);\r\n          }\r\n        }\r\n      });\r\n      console.log(\"grape\" + filterWineOnClick);\r\n    } else if (id == \"description\") {\r\n      let glassesList = glasses;\r\n\r\n      glassesList.forEach(function (e) {\r\n        let grapeList = e.description.map(capitilize);\r\n        for (let i = 0; i < grapeList.length; i++) {\r\n          if (grapeList[i] === value) {\r\n            filterWineOnClick.unshift(e);\r\n          }\r\n        }\r\n      });\r\n      console.log(\"desc\" + filterWineOnClick);\r\n    } else if (id == \"coravin\") {\r\n      let glassesList = glasses;\r\n      if (value === \"TRUE\") {\r\n        filterWineOnClick = glassesList.filter(\r\n          (result) => result.coravin == true\r\n        );\r\n      } else {\r\n        filterWineOnClick = glassesList.filter(\r\n          (result) => result.coravin !== true\r\n        );\r\n      }\r\n    } else {\r\n      let glassesList = glasses;\r\n      filterWineOnClick = glassesList.filter(\r\n        (result) => filterNulls(result[id]) == value\r\n      );\r\n    }\r\n    let difference = unFilteredWines.filter(\r\n      (x) => !filterWineOnClick.includes(x)\r\n    );\r\n\r\n    this.setState({ filterTerms: termsToArray });\r\n    this.setState({ glasses: filterWineOnClick });\r\n    this.setState({ filterTermsWithId: termsToArray1 });\r\n    this.setState({ filteredWines: difference });\r\n  };\r\n\r\n  onClear() {\r\n    const unFilteredWines1 = this.state.unFilteredWines;\r\n\r\n    this.setState({ glasses: unFilteredWines1 });\r\n    this.setState({ filterTerms: [] });\r\n    this.setState({ filterTermsWithId: [] });\r\n    this.setState({ filteredWines: [] });\r\n  }\r\n  onSort = (event) => {\r\n    const glasses = this.state.unFilteredWines;\r\n    const termy = event.target.id;\r\n\r\n    if (termy == \"color\") {\r\n      const sorted = glasses.sort(function (a, b) {\r\n        var colorA = a.color.toUpperCase();\r\n        var colorB = b.color.toUpperCase();\r\n        if (colorA < colorB) {\r\n          return -1;\r\n        }\r\n        if (colorA > colorB) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n      });\r\n      this.setState({ glasses: sorted });\r\n    } else if (termy == \"status\") {\r\n      const order = {\r\n        removed: 1,\r\n        added: 2,\r\n        none: 3,\r\n        hidden: 4,\r\n      };\r\n      let sorted = glasses.sort((a, b) => order[a.status] - order[b.status]);\r\n      this.setState({ glasses: sorted });\r\n    }\r\n  };\r\n  hideRemovedClick = (event) => {\r\n    this.setState((state) => ({ hideRemoved: !this.state.hideRemoved }));\r\n  };\r\n  unHideHiddenClick = (event) => {\r\n    this.setState((state) => ({ unHideHidden: !this.state.unHideHidden }));\r\n  };\r\n\r\n  ///render portion\r\n\r\n  //\r\n  //\r\n  //\r\n  //\r\n\r\n  render() {\r\n    const allInfo = this.state.allInfo;\r\n\r\n    if (allInfo.length === 0) {\r\n      return (\r\n        <div className=\"App\">\r\n          <CircularDeterminate />\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"App\">\r\n          <TempDrawer\r\n            onClear={this.onClear}\r\n            onSort={this.onSort}\r\n            glasses={this.state.glasses}\r\n            unFilteredWines={this.state.unFilteredWines}\r\n            onSearchSelect={this.onSearchSelect}\r\n            allInfo={this.state.allInfo}\r\n            hideRemovedClick={this.hideRemovedClick}\r\n            filterTerms={this.state.filterTerms}\r\n            unHideHidden={this.state.unHideHidden}\r\n            unHideHiddenClick={this.unHideHiddenClick}\r\n            onRemoveFilterTerms={this.onRemoveFilterTerms}\r\n            onSelect={this.onSelect}\r\n          />\r\n\r\n          {/* <AppBarSearch\r\n          allInfo={this.state.allInfo} /> */}\r\n          <MobileBlocksData\r\n            glasses={this.state.glasses}\r\n            wines={this.state.filteredWines}\r\n            onSelect={this.onSelect}\r\n            onClear={this.onClear}\r\n            curItem={this.state.curItem}\r\n            mappedGlasses={this.state.mappedGlasses}\r\n            hideRemoved={this.state.hideRemoved}\r\n            onCoravinSearch={this.onCoravinSearch}\r\n            unHideHiddenClick={this.unHideHiddenClick}\r\n            unHideHidden={this.state.unHideHidden}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}