{"version":3,"sources":["components/MobileBlocks.js","components/MobileBlocksData.js","components/CircularDeterminate.js","components/TempDrawer.js","components/App.js","registerServiceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","button","margin","spacing","input","display","card","maxWidth","minHeight","overflow","breakpoints","down","cardAdded","backgroundColor","cardRemoved","cardHidden","cardUnHidden","ButtonBase","color","fontSize","fontFamily","letterspacing","fontWeight","lineHeight","lists","AvatarButton","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatarRed","red","avatarWhite","avatarDessert","avatarCorovan","avatarSparkling","lister","listStyleType","MobileBlocks","data","onSelect","hideRemoved","unHideHidden","onCoravinSearch","unHideHiddenClick","vinyard1","status","classes","React","useState","expanded","setExpanded","Card","className","key","_id","raised","CardHeader","avatar","Avatar","aria-label","colorz","value","id","onClick","event","charAt","toUpperCase","upperCaseFirstLetterForColor","title","name","subheader","vinyard","string","CardContent","Typography","variant","component","coravin","coravinCheck","year","grapes","place","area","country","mise","price","CardActions","disableSpacing","IconButton","clsx","aria-expanded","Collapse","in","timeout","unmountOnExit","paragraph","grape","map","result","index","description","appellation","funfact","MobileBlocksData","glasses","priceCheck","cells","checkedStates","progress","CircularDeterminate","setProgress","useEffect","timer","setInterval","oldProgress","clearInterval","CircularProgress","list","width","fullList","TemporaryDrawer","props","top","left","bottom","howto","state","setState","onClear","onSearchSelect","onSort","hideRemovedClick","onRemoveFilterTerms","filterTerms","hideUnhideRemoved","setHideUnhideRemoved","changeHideRemoved","hideUnhideHidden","setHideUnhideHidden","changeHideHidden","checkIfCoravinName","howToColor","setHowToColor","handleHowToClickColor","howToButtons","setHowToButtons","handleHowToClickButtons","howToAvatar","setHowToAvatar","handleHowToClickAvatar","toggleDrawer","anchor","open","type","role","onKeyDown","List","ListItem","Divider","Fragment","Button","Drawer","onClose","list2","searchBox","placeholder","allInfo","e","Chip","label","onDelete","handleDelete","size","App","callBackendAPI","a","fetch","response","json","body","Error","message","target","unFilteredWines","filterTermsWithId1","filterTermsWithId","newTerm","push","uniqueTerms1","Set","termsToArray1","uniqueTerms","termsToArray","capitilize","element","array","filterWineOnClick","forEach","grapeList","i","length","glassesList","filter","item","filterNulls","difference","x","includes","filteredWines","unMutable","priceChange","newFilterTermsWithId","newFilterTerms","stringer","toString","newTermArray","newIdArray","newTermArrayLength","newArrayThatWillBeGlassesList","differenceBetweenNewArrayAndGlasses","filterCoravin","console","log","termy","order","removed","added","none","hidden","sorted","sort","b","statusSort","reverse","colorSort","priceSort","yearSort","white","sparkling","dessert","yearA","yearB","priceA","priceB","checkStates","zero","twentyone","thirtyone","fortyone","bind","this","then","res","glassesData","express","allSearchableData","descAndGrape","allInfo0","flat","Infinity","descAndGrapeArray","concat","thing","self","findIndex","t","valueA","valueB","mappedGlasses","catch","err","unFilteredWines1","arr","glasses2","wine","wines","curItem","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.f91383a0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport { string } from \"prop-types\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\n// import MobileBar from \"./MobileBar\";\r\n\r\n//this component is the layout for the cards\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  card: {\r\n    maxWidth: 345,\r\n    display: \"inline-block\",\r\n    minHeight: 300,\r\n    overflow: \"hidden\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      minHeight: 1,\r\n    },\r\n  },\r\n  cardAdded: {\r\n    maxWidth: 345,\r\n    backgroundColor: \"#6FAEF7\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      minHeight: 1,\r\n    },\r\n    display: \"inline-block\",\r\n    minHeight: 300,\r\n    overflow: \"hidden\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      minHeight: 1,\r\n    },\r\n  },\r\n  cardRemoved: {\r\n    maxWidth: 345,\r\n    backgroundColor: \"#FFA07A\",\r\n    display: \"inline-block\",\r\n    minHeight: 300,\r\n    overflow: \"hidden\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      minHeight: 1,\r\n    },\r\n  },\r\n\r\n  cardHidden: {\r\n    maxWidth: 345,\r\n    backgroundColor: \"yellow\",\r\n    display: \"inline-block\",\r\n    minHeight: 300,\r\n    overflow: \"hidden\",\r\n    display: \"none\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      minHeight: 1,\r\n    },\r\n  },\r\n  cardUnHidden: {\r\n    maxWidth: 345,\r\n    backgroundColor: \"yellow\",\r\n    display: \"inline-block\",\r\n    minHeight: 300,\r\n    overflow: \"hidden\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      minHeight: 1,\r\n    },\r\n  },\r\n  ButtonBase: {\r\n    color: \"blue\",\r\n    fontSize: \"0.875rem\",\r\n    fontFamily: \"Roboto\",\r\n\r\n    letterspacing: \"0.01071em\",\r\n    fontWeight: \"400\",\r\n    lineHeight: \"1.43\",\r\n  },\r\n  lists: {\r\n    color: \"blue\",\r\n    margin: theme.spacing(1),\r\n  },\r\n  AvatarButton: {\r\n    fontSize: \"1em\",\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n  avatarRed: {\r\n    backgroundColor: red[500],\r\n  },\r\n  avatarWhite: {\r\n    backgroundColor: \"black\",\r\n  },\r\n  avatarDessert: {\r\n    backgroundColor: \"yellow\",\r\n    color: \"black\",\r\n  },\r\n  avatarCorovan: {\r\n    backgroundColor: \"green\",\r\n  },\r\n  avatarSparkling: {\r\n    backgroundColor: \"blue\",\r\n  },\r\n\r\n  lister: {\r\n    listStyleType: \"none\",\r\n  },\r\n}));\r\n\r\nconst MobileBlocks = ({\r\n  data,\r\n  onSelect,\r\n  hideRemoved,\r\n  onCoravinSearch,\r\n  unHideHiddenClick,\r\n  unHideHidden,\r\n}) => {\r\n  const grapes = \"grapes\";\r\n  const year = \"year\";\r\n  const place = \"place\";\r\n  const area = \"area\";\r\n  const country = \"country\";\r\n  const appellation = \"appellation\";\r\n  const grape = \"grape\";\r\n  const description = \"description\";\r\n  const vinyard = \"vinyard\";\r\n  const color = \"color\";\r\n  const mise = \"mise\";\r\n  const coravin = \"coravin\";\r\n\r\n  const upperCaseFirstLetter = (str) =>\r\n    str.replace(/\\b[a-z]/g, (char) => char.toUpperCase());\r\n\r\n  const upperCaseFirstLetterForColor = (color) => {\r\n    var str = color.charAt(0);\r\n    return str.toUpperCase();\r\n    //check to see if needed in admin mode\r\n  };\r\n  //set status of card to give it it's background color\r\n  const checkStatus = (status) => {\r\n    if (status === \"added\") {\r\n      return classes.cardAdded;\r\n    } else if (status === \"removed\" && !hideRemoved) {\r\n      return classes.cardRemoved;\r\n    } else if (status === \"removed\" && hideRemoved) {\r\n      return classes.cardHidden;\r\n    } else if (status === \"hidden\" && !unHideHidden) {\r\n      return classes.cardHidden;\r\n    } else if (status === \"hidden\" && unHideHidden) {\r\n      return classes.cardUnHidden;\r\n    } else {\r\n      return classes.card;\r\n    }\r\n  };\r\n  const colorz = (color) => {\r\n    if (color === \"red\") {\r\n      return classes.avatarRed;\r\n    } else if (color === \"white\") {\r\n      return classes.avatarWhite;\r\n    } else if (color === \"dessert\") {\r\n      return classes.avatarDessert;\r\n    } else if (color === \"corovan\") {\r\n      return classes.avatarCorovan;\r\n    } else {\r\n      return classes.avatarSparkling;\r\n    }\r\n  };\r\n\r\n  //to get the subheader as a button\r\n  let vinyard2;\r\n  function vinny(vinyard1) {\r\n    if (vinyard1 === string) {\r\n      vinyard2 = vinyard1.toUpperCase();\r\n    }\r\n    return (\r\n      <ButtonBase\r\n        className={classes.ButtonBase}\r\n        id={vinyard}\r\n        value={vinyard1}\r\n        onClick={(event) => onSelect(event)}\r\n      >\r\n        {vinyard1}\r\n      </ButtonBase>\r\n    );\r\n  }\r\n  function coravinCheck(coravin) {\r\n    if (coravin === true) {\r\n      return \"coravin\";\r\n    } else {\r\n      return \"non-coravin\";\r\n    }\r\n  }\r\n\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  const checkGlass = (glass) => {\r\n    if (glass == \"AP\") {\r\n      return \"an\";\r\n    } else {\r\n      return \"a\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card className={checkStatus(data.status)} key={data._id} raised>\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar aria-label=\"recipe\" className={colorz(data.color)}>\r\n            <ButtonBase\r\n              value={data.color}\r\n              id={color}\r\n              onClick={(event) => onSelect(event)}\r\n              className={classes.AvatarButton}\r\n            >\r\n              {upperCaseFirstLetterForColor(data.color)}\r\n            </ButtonBase>\r\n          </Avatar>\r\n        }\r\n        title={data.name}\r\n        subheader={vinny(data.vinyard)}\r\n      />\r\n      {/* {images enabled but commented out until I can get images} */}\r\n      {/* for images */}\r\n      {/* <CardMedia\r\n        className={classes.media}\r\n        image={`https://josephbeckcastro.com/site4/images/${data.picture}.jpg`}\r\n        title={data.name}\r\n      /> */}\r\n\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          A {\"\"}\r\n          <ButtonBase\r\n            className={classes.ButtonBase}\r\n            id={coravin}\r\n            onClick={(event) => onSelect(event)}\r\n            value={data.coravin}\r\n          >\r\n            {coravinCheck(data.coravin)}\r\n          </ButtonBase>{\" \"}\r\n          <ButtonBase\r\n            className={classes.ButtonBase}\r\n            value={data.year}\r\n            id={year}\r\n            onClick={(event) => onSelect(event)}\r\n          >\r\n            {data.year}\r\n          </ButtonBase>{\" \"}\r\n          <ButtonBase\r\n            className={classes.ButtonBase}\r\n            component=\"button\"\r\n            value={data.grapes}\r\n            id={grapes}\r\n            onClick={(event) => onSelect(event)}\r\n          >\r\n            {data.grapes}\r\n          </ButtonBase>{\" \"}\r\n          from{\" \"}\r\n          <ButtonBase\r\n            className={classes.ButtonBase}\r\n            value={data.place}\r\n            id={place}\r\n            onClick={(event) => onSelect(event)}\r\n          >\r\n            {data.place}\r\n          </ButtonBase>{\" \"}\r\n          <ButtonBase\r\n            className={classes.ButtonBase}\r\n            value={data.area}\r\n            id={area}\r\n            onClick={(event) => onSelect(event)}\r\n          >\r\n            {data.area}\r\n          </ButtonBase>{\" \"}\r\n          in {\"\"}\r\n          <ButtonBase\r\n            className={classes.ButtonBase}\r\n            value={data.country}\r\n            id={country}\r\n            onClick={(event) => onSelect(event)}\r\n          >\r\n            {data.country}\r\n          </ButtonBase>{\" \"}\r\n          served in {checkGlass(data.mise)}{\" \"}\r\n          <ButtonBase\r\n            className={classes.ButtonBase}\r\n            value={data.mise}\r\n            id={mise}\r\n            onClick={(event) => onSelect(event)}\r\n          >\r\n            {data.mise}\r\n          </ButtonBase>{\" \"}\r\n          for ${data.price}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        <IconButton\r\n          className={clsx(classes.expand, {\r\n            [classes.expandOpen]: expanded,\r\n          })}\r\n          onClick={handleExpandClick}\r\n          aria-expanded={expanded}\r\n          aria-label=\"show more\"\r\n        >\r\n          <ExpandMoreIcon />\r\n        </IconButton>\r\n      </CardActions>\r\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n        <CardContent>\r\n          <Typography paragraph>\r\n            Grapes<br></br>\r\n            {data.grape.map((result, index) => (\r\n              <li key={index} className=\"list\">\r\n                <button\r\n                  className=\"descAndGrape\"\r\n                  id={grape}\r\n                  value={result}\r\n                  onClick={(event) => onSelect(event)}\r\n                >\r\n                  {result}\r\n                </button>\r\n              </li>\r\n            ))}\r\n          </Typography>\r\n          <Typography paragraph>\r\n            Descriptions<br></br>\r\n            {data.description.map((result, index) => (\r\n              <li key={index} className=\"list\">\r\n                <button\r\n                  className=\"descAndGrape\"\r\n                  id={description}\r\n                  value={result}\r\n                  onClick={(event) => onSelect(event)}\r\n                >\r\n                  {result}\r\n                </button>\r\n              </li>\r\n            ))}\r\n            {/* \r\n            {data.description.map((result, index) => (\r\n              <ul className=\"list\">\r\n                <li key={index}>\r\n                  <Chip\r\n                    id={description}\r\n                    value={result}\r\n                    label={result}\r\n                    onClick={(event) => chipClick(event)}\r\n                    value={result}\r\n                  ></Chip>\r\n                </li>\r\n              </ul>\r\n            ))} */}\r\n          </Typography>\r\n          <p></p>\r\n          <Typography paragraph>\r\n            Appellation<br></br>\r\n            <button\r\n              className=\"descAndGrape\"\r\n              value={data.appellation}\r\n              id={appellation}\r\n              onClick={(event) => onSelect(event)}\r\n            >\r\n              {data.appellation}\r\n            </button>\r\n          </Typography>\r\n          <Typography paragraph>Fun Fact: {data.funfact}</Typography>\r\n        </CardContent>\r\n      </Collapse>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default MobileBlocks;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport MobileBlocks from \"./MobileBlocks\";\r\n//sends info to each block so they can function independently\r\nconst MobileBlocksData = ({\r\n  onSelect,\r\n  glasses,\r\n  hideRemoved,\r\n  onCoravinSearch,\r\n  unHideHiddenClick,\r\n  unHideHidden,\r\n  priceCheck,\r\n  checkedStates,\r\n}) => {\r\n  const data = glasses;\r\n  // useEffect(() => {\r\n  //   priceCheck(checkedStates);\r\n  // }, [glasses]);\r\n  const cells = data.map((data) => {\r\n    return (\r\n      <MobileBlocks\r\n        data={data}\r\n        key={data._id}\r\n        onSelect={onSelect}\r\n        hideRemoved={hideRemoved}\r\n        onCoravinSearch={onCoravinSearch}\r\n        unHideHiddenClick={unHideHiddenClick}\r\n        unHideHidden={unHideHidden}\r\n        priceCheck={priceCheck}\r\n      />\r\n    );\r\n  });\r\n\r\n  return <div className=\"MobileBlock\">{cells}</div>;\r\n};\r\nexport default MobileBlocksData;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  progress: {\r\n    margin: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nexport default function CircularDeterminate() {\r\n  const classes = useStyles();\r\n  const [progress, setProgress] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    function tick() {\r\n      // reset when reaching 100%\r\n      setProgress(oldProgress => (oldProgress >= 100 ? 0 : oldProgress + 1));\r\n    }\r\n\r\n    const timer = setInterval(tick, 20);\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <CircularProgress\r\n        className={classes.progress}\r\n        variant=\"determinate\"\r\n        value={progress}\r\n        color=\"secondary\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\n// import ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\n// import ListItemText from \"@material-ui/core/ListItemText\";\r\n// import InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\n// import MailIcon from \"@material-ui/icons/Mail\";\r\nimport ReactSearchBox from \"react-search-box\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport \"./styles/App.css\";\r\n// import { green } from \"@material-ui/core/colors\";\r\n// import FormGroup from \"@material-ui/core/FormGroup\";\r\n// import FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n// import Checkbox from \"@material-ui/core/Checkbox\";\r\n// import CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\r\n// import CheckBoxIcon from \"@material-ui/icons/CheckBox\";\r\n// import Favorite from \"@material-ui/icons/Favorite\";\r\n// import FavoriteBorder from \"@material-ui/icons/FavoriteBorder\";\r\n// import CheckBoxes from \"./CheckBoxes\";\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: \"auto\",\r\n  },\r\n});\r\n//this pulls down a drawer that will allow one to sort by certain\r\n//params such as color, hide removed/hidden items, clear all filters,\r\n//and give a \"how-to\"\r\nexport default function TemporaryDrawer(props) {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    howto: false,\r\n  });\r\n\r\n  const onClear = props.onClear;\r\n  const onSearchSelect = props.onSearchSelect;\r\n  const onSort = props.onSort;\r\n  const hideRemovedClick = props.hideRemovedClick;\r\n  const unHideHiddenClick = props.unHideHiddenClick;\r\n  const onRemoveFilterTerms = props.onRemoveFilterTerms;\r\n  const filterTerms = props.filterTerms;\r\n\r\n  const onSelect = props.onSelect;\r\n  const color = \"color\";\r\n  const status = \"status\";\r\n  const [hideUnhideRemoved, setHideUnhideRemoved] = React.useState(false);\r\n  //remove filter items\r\n  const handleDelete = (result) => {\r\n    onRemoveFilterTerms(result);\r\n  };\r\n\r\n  // const [upOrDown, setUpOrDown] = React.useState(false);\r\n  // const upOrDownClick = (event) => {\r\n  //   setUpOrDown(!upOrDown);\r\n  //   onSort(event);\r\n  // };\r\n\r\n  //show/hide removed\r\n  const changeHideRemoved = (event) => {\r\n    hideRemovedClick();\r\n    setHideUnhideRemoved(!hideUnhideRemoved);\r\n  };\r\n\r\n  const displayHideRemoved = () => {\r\n    if (hideUnhideRemoved == false) {\r\n      return \"Hide Removed\";\r\n    } else {\r\n      return \"Show Removed\";\r\n    }\r\n  };\r\n  //show/hide hidden aka retired wines\r\n  const [hideUnhideHidden, setHideUnhideHidden] = React.useState(true);\r\n  const changeHideHidden = (event) => {\r\n    unHideHiddenClick();\r\n    setHideUnhideHidden(!hideUnhideHidden);\r\n  };\r\n  const displayHideHidden = () => {\r\n    if (hideUnhideHidden == false) {\r\n      return \"Show Retired\";\r\n    } else {\r\n      return \"Hide Retired\";\r\n    }\r\n  };\r\n  //since coravin is a boolean it would show up as \"true\" or \"false\"\r\n  //for filtered items. This changes it to \"coravin\" or \"non-coravin\"\r\n  const checkIfCoravinName = (result) => {\r\n    if (result == \"TRUE\") {\r\n      return \"CORAVIN\";\r\n    } else if (result == \"FALSE\") {\r\n      return \"NON-CORAVIN\";\r\n    } else {\r\n      return result;\r\n    }\r\n  };\r\n\r\n  //hide/show how to instructions\r\n  const [howToColor, setHowToColor] = React.useState(false);\r\n  const handleHowToClickColor = () => {\r\n    setHowToColor(!howToColor);\r\n  };\r\n  const [howToButtons, setHowToButtons] = React.useState(false);\r\n  const handleHowToClickButtons = () => {\r\n    setHowToButtons(!howToButtons);\r\n  };\r\n  const [howToAvatar, setHowToAvatar] = React.useState(false);\r\n  const handleHowToClickAvatar = () => {\r\n    setHowToAvatar(!howToAvatar);\r\n  };\r\n  //hide/show the drawer\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const list = (anchor) => (\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === \"top\" || anchor === \"bottom\",\r\n      })}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <List>\r\n        Sort By:\r\n        <ListItem button onClick={(event) => onSort(event)} id={color}>\r\n          Color\r\n        </ListItem>\r\n        <ListItem button onClick={(event) => onSort(event)} id={status}>\r\n          Status\r\n        </ListItem>\r\n        <ListItem button onClick={(event) => onSort(event)} id=\"year\">\r\n          Year\r\n        </ListItem>\r\n        <ListItem button onClick={(event) => onSort(event)} id=\"price\">\r\n          Price\r\n        </ListItem>\r\n      </List>\r\n      <Divider />\r\n      <Divider />\r\n      <Divider />\r\n      <List>\r\n        Hide Items:\r\n        <ListItem button onClick={changeHideRemoved}>\r\n          {displayHideRemoved()}\r\n        </ListItem>\r\n        <ListItem button onClick={changeHideHidden}>\r\n          {displayHideHidden()}\r\n        </ListItem>\r\n      </List>\r\n      <Divider />\r\n      <Divider />\r\n      <Divider />\r\n      <List>\r\n        Clear:\r\n        <ListItem button onClick={onClear}>\r\n          Clear Filters\r\n        </ListItem>\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  const list2 = (anchor) => (\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === \"top\" || anchor === \"bottom\",\r\n      })}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, true)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      <List>\r\n        How To:\r\n        <ListItem button onClick={handleHowToClickColor}>\r\n          {howToColor ? (\r\n            <span>\r\n              {\" \"}\r\n              <h3>Colors</h3>\r\n              <h5>Click here to close</h5>\r\n              <p>Red means the wine was recently removed</p>{\" \"}\r\n              <p>Blue means the wine was recently added</p>\r\n              <p>\r\n                Yellow means the wine has been \"retired\" aka it was previously\r\n                on the list but has been removed before the latest update{\" \"}\r\n              </p>\r\n            </span>\r\n          ) : (\r\n            \"Color of the Cards\"\r\n          )}\r\n        </ListItem>\r\n        <ListItem button onClick={handleHowToClickButtons}>\r\n          {howToButtons ? (\r\n            <span>\r\n              {\" \"}\r\n              <h3>Buttons</h3>\r\n              <h5>Click here to close</h5>\r\n              <p>\r\n                Each descriptor is a filtering button. For instance if you\r\n                wanted to see all wines from France you would click on the\r\n                France button.\r\n              </p>{\" \"}\r\n            </span>\r\n          ) : (\r\n            \"Descriptor Buttons\"\r\n          )}\r\n        </ListItem>\r\n        <ListItem button onClick={handleHowToClickAvatar}>\r\n          {howToAvatar ? (\r\n            <span>\r\n              {\" \"}\r\n              <h3>Avatar</h3>\r\n              <h5>Click here to close</h5>\r\n              <p>\r\n                The avatars (or Aangs) at the top left shows what type of wine\r\n                it is. R = Red, W = White, D = Dessert, and S = Sparkling.\r\n              </p>{\" \"}\r\n            </span>\r\n          ) : (\r\n            \"Avatar\"\r\n          )}\r\n        </ListItem>\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"TempDrawer\">\r\n      {/* <CheckBoxes\r\n        priceCheck={props.priceCheck}\r\n        onSelect={props.onSelect}\r\n        glasses={props.glasses}\r\n      /> */}\r\n      {[\"menu\"].map((anchor) => (\r\n        <React.Fragment key={anchor}>\r\n          <Button onClick={toggleDrawer(anchor, true)}>{anchor}</Button>\r\n          <Drawer\r\n            anchor={anchor}\r\n            open={state[anchor]}\r\n            onClose={toggleDrawer(anchor, false)}\r\n          >\r\n            {list(anchor)}\r\n            {list2(anchor)}\r\n          </Drawer>\r\n        </React.Fragment>\r\n      ))}\r\n      {/* {[\"right\"].map((anchor) => (\r\n        <React.Fragment key={anchor}>\r\n          <Button onClick={toggleDrawer(anchor, true)}>{anchor}</Button>\r\n          <Drawer\r\n            anchor={anchor}\r\n            open={state[anchor]}\r\n            onClose={toggleDrawer(anchor, false)}\r\n          >\r\n            {list2(anchor)}\r\n          </Drawer>\r\n        </React.Fragment>\r\n      ))} */}\r\n\r\n      <ReactSearchBox\r\n        className={classes.searchBox}\r\n        placeholder=\"Search\"\r\n        data={props.allInfo}\r\n        onSelect={(e) => onSearchSelect(e)}\r\n      />\r\n\r\n      {filterTerms.map((result) => (\r\n        <ul className=\"list\">\r\n          <li key={result.index}>\r\n            <Chip\r\n              label={checkIfCoravinName(result)}\r\n              onDelete={() => handleDelete(result)}\r\n              variant=\"outlined\"\r\n              value={result.value}\r\n              size=\"small\"\r\n              key={result.index}\r\n            />\r\n          </li>\r\n        </ul>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component, useState } from \"react\";\r\nimport \"./styles/App.css\";\r\n// import MobileBar from \"./MobileBar\";\r\nimport MobileBlocksData from \"./MobileBlocksData\";\r\nimport CircularDeterminate from \"./CircularDeterminate\";\r\n// import { MongoNetworkError } from \"mongodb\";\r\nimport { Drawer } from \"@material-ui/core\";\r\nimport TempDrawer from \"./TempDrawer\";\r\nimport CheckBoxes from \"./CheckBoxes\";\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      glasses: [],\r\n      filteredWines: [],\r\n      allInfo: [],\r\n      hideRemoved: false,\r\n      unHideHidden: true,\r\n      unFilteredWines: [],\r\n      filterTerms: [],\r\n      filterTermsWithId: [],\r\n      colorSort: true,\r\n      statusSort: true,\r\n      yearSort: true,\r\n      priceSort: true,\r\n      unMutable: [],\r\n      checkStates: {\r\n        zero: false,\r\n        twentyone: false,\r\n        thirtyone: false,\r\n        fortyone: false,\r\n      },\r\n    };\r\n\r\n    this.onSelect = this.onSelect.bind(this);\r\n    this.onRemoveFilterTerms = this.onRemoveFilterTerms.bind(this);\r\n    this.onCoravinSearch = this.onCoravinSearch.bind(this);\r\n    this.onSearchSelect = this.onSearchSelect.bind(this);\r\n    this.onClear = this.onClear.bind(this);\r\n    this.onSort = this.onSort.bind(this);\r\n    this.hideRemovedClick = this.hideRemovedClick.bind(this);\r\n    this.priceCheck = this.priceCheck.bind(this);\r\n    this.priceChange = this.priceChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Call our fetch function below once the component mounts\r\n    this.callBackendAPI()\r\n\r\n      .then((res) => {\r\n        const glassesData = res.express;\r\n        const order = {\r\n          removed: 1,\r\n          added: 2,\r\n          none: 3,\r\n          hidden: 4,\r\n        };\r\n        glassesData.sort((a, b) => order[a.status] - order[b.status]);\r\n        this.setState({ glasses: glassesData });\r\n        this.setState({ unFilteredWines: glassesData });\r\n        this.setState({ unMutable: glassesData });\r\n        //returns all searchable data into an array for the searchbar\r\n        let allSearchableData = glassesData.map((result) => {\r\n          return [\r\n            {\r\n              value: result.name,\r\n              id: \"name\",\r\n              key: \"\",\r\n            },\r\n            {\r\n              value: result.place,\r\n              id: \"place\",\r\n              key: \"\",\r\n            },\r\n            {\r\n              value: result.added,\r\n              id: \"added\",\r\n              key: \"\",\r\n            },\r\n            {\r\n              value: result.appellation,\r\n              id: \"appellation\",\r\n              key: \"\",\r\n            },\r\n            {\r\n              value: result.color,\r\n              id: \"color\",\r\n              key: \"\",\r\n            },\r\n            {\r\n              value: result.country,\r\n              id: \"country\",\r\n              key: \"\",\r\n            },\r\n            {\r\n              value: result.description,\r\n              id: \"description\",\r\n              key: \"\",\r\n            },\r\n            {\r\n              value: result.grapes,\r\n              id: \"grapes\",\r\n              key: \"\",\r\n            },\r\n            {\r\n              value: result.grape,\r\n              id: \"grape\",\r\n              key: \"\",\r\n            },\r\n            {\r\n              value: result.mise,\r\n              id: \"mise\",\r\n              key: \"\",\r\n            },\r\n            {\r\n              value: result.status,\r\n              id: \"status\",\r\n              key: \"\",\r\n            },\r\n            {\r\n              value: result.vinyard,\r\n              id: \"vinyard\",\r\n              key: \"\",\r\n            },\r\n            {\r\n              value: result.year,\r\n              id: \"year\",\r\n              key: \"\",\r\n            },\r\n          ];\r\n        });\r\n        let descAndGrape = [];\r\n        const allInfo0 = allSearchableData.flat(Infinity);\r\n        allInfo0.map((item) => {\r\n          if (item.id == \"description\") {\r\n            descAndGrape.push(\r\n              item.value.map((result) => [\r\n                {\r\n                  value: result,\r\n                  id: \"description\",\r\n                  key: \"\",\r\n                },\r\n              ])\r\n            );\r\n          }\r\n        });\r\n        allInfo0.map((item) => {\r\n          if (item.id == \"grape\") {\r\n            descAndGrape.push(\r\n              item.value.map((result) => [\r\n                {\r\n                  value: result,\r\n                  id: \"grape\",\r\n                  key: \"\",\r\n                },\r\n              ])\r\n            );\r\n          }\r\n        });\r\n\r\n        const descAndGrapeArray = descAndGrape.flat(Infinity);\r\n        const allInfo19 = allInfo0.concat(descAndGrapeArray);\r\n        //make one array from many\r\n\r\n        //filter out non strings\r\n        const allInfo1 = allInfo19.filter((item) => {\r\n          return typeof item.value === \"string\";\r\n        });\r\n        const allInfo2 = allInfo1.filter(\r\n          (thing, index, self) =>\r\n            index ===\r\n            self.findIndex((t) => t.value === thing.value && t.id === thing.id)\r\n        );\r\n        //filter out strings that have no characters\r\n        const allInfo3 = allInfo2.filter((result) => {\r\n          return result.value.length > 0;\r\n        });\r\n        //give items keys\r\n        const allInfo = allInfo3.map((value, index) => {\r\n          return {\r\n            key: index.toString(),\r\n            value: value.value,\r\n            id: value.id,\r\n          };\r\n        });\r\n        //sorts allinfo so when searching it shows up alphabetically\r\n        allInfo.sort(function (a, b) {\r\n          var valueA = a.value.toUpperCase();\r\n          var valueB = b.value.toUpperCase();\r\n          if (valueA < valueB) {\r\n            return -1;\r\n          }\r\n          if (valueA > valueB) {\r\n            return 1;\r\n          }\r\n          return 0;\r\n        });\r\n\r\n        this.setState({ allInfo: allInfo });\r\n        const glasses = this.state.glasses;\r\n        const mappedGlasses = glasses.map((result) => (\r\n          <li key={result._id}>{result}</li>\r\n        ));\r\n        this.setState({ mappedGlasses: mappedGlasses });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n  // Fetches our GET route from the Express server.\r\n\r\n  callBackendAPI = async () => {\r\n    const response = await fetch(\"https://admin-back.herokuapp.com/api\");\r\n    const body = await response.json();\r\n\r\n    if (response.status !== 200) {\r\n      throw Error(body.message);\r\n    }\r\n    return body;\r\n  };\r\n\r\n  //filter to just wines that have the features ie certain grapes,\r\n  // area, etc\r\n  onSelect = (e) => {\r\n    let id = e.target.id;\r\n    let value1 = e.target.value;\r\n    let value = value1.toUpperCase();\r\n\r\n    let unFilteredWines = this.state.unFilteredWines;\r\n\r\n    let filterTermsWithId1 = this.state.filterTermsWithId;\r\n    let newTerm = { id: id, value: value };\r\n\r\n    filterTermsWithId1.push(newTerm);\r\n    const uniqueTerms1 = new Set(filterTermsWithId1);\r\n    const termsToArray1 = [...uniqueTerms1];\r\n    // console.log(termsToArray1);\r\n\r\n    const glasses = this.state.glasses;\r\n    let filterTerms = this.state.filterTerms;\r\n    function filterNulls(item) {\r\n      if (typeof item === \"string\") {\r\n        return item.toUpperCase();\r\n      }\r\n    }\r\n\r\n    filterTerms.push(value);\r\n    const uniqueTerms = new Set(filterTerms);\r\n    const termsToArray = [...uniqueTerms];\r\n\r\n    let capitilize = function (element, index, array) {\r\n      return element.toUpperCase();\r\n    };\r\n\r\n    let filterWineOnClick = [];\r\n    if (id == \"grape\") {\r\n      let glassesList = glasses;\r\n\r\n      glassesList.forEach(function (e) {\r\n        let grapeList = e.grape.map(capitilize);\r\n        for (let i = 0; i < grapeList.length; i++) {\r\n          if (grapeList[i] === value) {\r\n            filterWineOnClick.push(e);\r\n          }\r\n        }\r\n      });\r\n    } else if (id == \"description\") {\r\n      let glassesList = glasses;\r\n\r\n      glassesList.forEach(function (e) {\r\n        let grapeList = e.description.map(capitilize);\r\n        for (let i = 0; i < grapeList.length; i++) {\r\n          if (grapeList[i] === value) {\r\n            filterWineOnClick.push(e);\r\n          }\r\n        }\r\n      });\r\n    } else if (id == \"coravin\") {\r\n      let glassesList = glasses;\r\n      if (value === \"TRUE\") {\r\n        filterWineOnClick = glassesList.filter(\r\n          (result) => result.coravin == true\r\n        );\r\n      } else {\r\n        filterWineOnClick = glassesList.filter(\r\n          (result) => result.coravin !== true\r\n        );\r\n      }\r\n    } else {\r\n      let glassesList = glasses;\r\n      filterWineOnClick = glassesList.filter(\r\n        (result) => filterNulls(result[id]) == value\r\n      );\r\n    }\r\n    let difference = unFilteredWines.filter(\r\n      (x) => !filterWineOnClick.includes(x)\r\n    );\r\n\r\n    this.setState({ filterTerms: termsToArray });\r\n    // this.setState({ glasses: filterWineOnClick });\r\n    this.setState({ filterTermsWithId: termsToArray1 });\r\n    this.setState({ filteredWines: difference });\r\n    this.setState({ unMutable: filterWineOnClick });\r\n    this.priceChange(filterWineOnClick);\r\n  };\r\n\r\n  //this function is called when items are removed\r\n  //from the filtering terms\r\n  onRemoveFilterTerms = (result) => {\r\n    let newFilterTermsWithId = this.state.filterTermsWithId;\r\n    let newFilterTerms = this.state.filterTerms;\r\n    let filteredWines = this.state.filteredWines;\r\n    let stringer = result.toString();\r\n\r\n    let unFilteredWines = this.state.unFilteredWines;\r\n    let glasses = this.state.glasses;\r\n\r\n    let newTermArray = newFilterTerms.filter(\r\n      (item) => item.toString() !== stringer\r\n    );\r\n    let newIdArray = newFilterTermsWithId.filter(\r\n      (item) => item.value !== result\r\n    );\r\n\r\n    let removedTermWithId = newFilterTermsWithId.filter(\r\n      (item) => item.value === result\r\n    );\r\n\r\n    this.setState({ filterTermsWithId: newIdArray });\r\n    this.setState({ filterTerms: newTermArray });\r\n    let capitilize = function (element, index, array) {\r\n      return element.toUpperCase();\r\n    };\r\n    function filterNulls(item) {\r\n      if (typeof item === \"string\") {\r\n        return item.toUpperCase();\r\n      }\r\n    }\r\n    let filterWineOnClick = [];\r\n    let newTermArrayLength = newTermArray.length;\r\n    let glassesList = unFilteredWines;\r\n\r\n    if (newTermArrayLength == 0) {\r\n      filterWineOnClick = unFilteredWines;\r\n      this.setState({ glasses: filterWineOnClick });\r\n    }\r\n\r\n    ////////////////////////////\r\n    //////////////\r\n    else {\r\n      newIdArray.forEach(function (item) {\r\n        let id = item.id;\r\n        let value = item.value;\r\n        let newArrayThatWillBeGlassesList = [];\r\n\r\n        if (id == \"grape\") {\r\n          glassesList.forEach(function (e) {\r\n            // console.log(wineId);\r\n            let grapeList = e.grape.map(capitilize);\r\n            for (let i = 0; i < grapeList.length; i++) {\r\n              if (grapeList[i] === value) {\r\n                newArrayThatWillBeGlassesList.push(e);\r\n              }\r\n            }\r\n          });\r\n          const differenceBetweenNewArrayAndGlasses = glassesList.filter((x) =>\r\n            newArrayThatWillBeGlassesList.includes(x)\r\n          );\r\n          glassesList = differenceBetweenNewArrayAndGlasses;\r\n        } else if (id == \"description\") {\r\n          glassesList.forEach(function (e) {\r\n            let grapeList = e.description.map(capitilize);\r\n            for (let i = 0; i < grapeList.length; i++) {\r\n              if (grapeList[i] === value) {\r\n                newArrayThatWillBeGlassesList.push(e);\r\n              }\r\n            }\r\n          });\r\n          const differenceBetweenNewArrayAndGlasses = glassesList.filter((x) =>\r\n            newArrayThatWillBeGlassesList.includes(x)\r\n          );\r\n          glassesList = differenceBetweenNewArrayAndGlasses;\r\n        } else if (id == \"coravin\") {\r\n          if (value === \"TRUE\") {\r\n            filterWineOnClick = glassesList.filter(\r\n              (result) => result.coravin == true\r\n            );\r\n            glassesList = filterWineOnClick;\r\n          } else {\r\n            filterWineOnClick = glassesList.filter(\r\n              (result) => result.coravin !== true\r\n            );\r\n          }\r\n          glassesList = filterWineOnClick;\r\n        } else {\r\n          filterWineOnClick = glassesList.filter(\r\n            (result) => filterNulls(result[id]) == value\r\n          );\r\n          glassesList = filterWineOnClick;\r\n        }\r\n      });\r\n    }\r\n    let difference = unFilteredWines.filter(\r\n      (x) => !filterWineOnClick.includes(x)\r\n    );\r\n\r\n    // this.setState({ glasses: glassesList });\r\n    this.setState({ filteredWines: difference });\r\n    this.setState({ unMutable: glassesList });\r\n    this.priceChange(glassesList);\r\n  };\r\n  ///\r\n  ///\r\n  ///since coravin is a boolean this is a seperate function to\r\n  //filter wines that are coravin or not\r\n  onCoravinSearch = (event) => {\r\n    let id = event.target.id;\r\n    let value = event.target.value;\r\n    let filterTerms = this.state.filterTerms;\r\n    const glasses = this.state.glasses;\r\n    if (value === \"true\") {\r\n      filterTerms.push(id);\r\n    } else if (value === \"false\") {\r\n      filterTerms.push(id);\r\n    }\r\n\r\n    const filterCoravin = glasses.filter((result) => {\r\n      if (value === \"true\") {\r\n        return result.coravin === true;\r\n      }\r\n      if (value === \"false\") {\r\n        return result.coravin === false;\r\n      }\r\n    });\r\n    const uniqueTerms = new Set(filterTerms);\r\n    const termsToArray = [...uniqueTerms];\r\n\r\n    this.setState({ glasses: filterCoravin });\r\n    this.setState({ filterTerms: termsToArray });\r\n    this.setState({ unMutable: filterCoravin });\r\n  };\r\n\r\n  //for selecting items from the search bar\r\n  onSearchSelect = (e) => {\r\n    let id = e.id;\r\n    let value1 = e.value;\r\n    let value = value1.toUpperCase();\r\n\r\n    let unFilteredWines = this.state.unFilteredWines;\r\n\r\n    let filterTermsWithId1 = this.state.filterTermsWithId;\r\n    let newTerm = { id: id, value: value };\r\n\r\n    filterTermsWithId1.push(newTerm);\r\n    const uniqueTerms1 = new Set(filterTermsWithId1);\r\n    const termsToArray1 = [...uniqueTerms1];\r\n    // console.log(termsToArray1);\r\n\r\n    const glasses = this.state.glasses;\r\n    let filterTerms = this.state.filterTerms;\r\n    function filterNulls(item) {\r\n      if (typeof item === \"string\") {\r\n        return item.toUpperCase();\r\n      }\r\n    }\r\n\r\n    filterTerms.push(value);\r\n    const uniqueTerms = new Set(filterTerms);\r\n    const termsToArray = [...uniqueTerms];\r\n\r\n    let capitilize = function (element, index, array) {\r\n      return element.toUpperCase();\r\n    };\r\n\r\n    let filterWineOnClick = [];\r\n    if (id == \"grape\") {\r\n      let glassesList = glasses;\r\n\r\n      glassesList.forEach(function (e) {\r\n        let grapeList = e.grape.map(capitilize);\r\n        for (let i = 0; i < grapeList.length; i++) {\r\n          if (grapeList[i] === value) {\r\n            filterWineOnClick.push(e);\r\n          }\r\n        }\r\n      });\r\n      console.log(\"grape\" + filterWineOnClick);\r\n    } else if (id == \"description\") {\r\n      let glassesList = glasses;\r\n\r\n      glassesList.forEach(function (e) {\r\n        let grapeList = e.description.map(capitilize);\r\n        for (let i = 0; i < grapeList.length; i++) {\r\n          if (grapeList[i] === value) {\r\n            filterWineOnClick.push(e);\r\n          }\r\n        }\r\n      });\r\n      console.log(\"desc\" + filterWineOnClick);\r\n    } else if (id == \"coravin\") {\r\n      let glassesList = glasses;\r\n      if (value === \"TRUE\") {\r\n        filterWineOnClick = glassesList.filter(\r\n          (result) => result.coravin == true\r\n        );\r\n      } else {\r\n        filterWineOnClick = glassesList.filter(\r\n          (result) => result.coravin !== true\r\n        );\r\n      }\r\n    } else {\r\n      let glassesList = glasses;\r\n      filterWineOnClick = glassesList.filter(\r\n        (result) => filterNulls(result[id]) == value\r\n      );\r\n    }\r\n    let difference = unFilteredWines.filter(\r\n      (x) => !filterWineOnClick.includes(x)\r\n    );\r\n\r\n    this.setState({ filterTerms: termsToArray });\r\n    this.setState({ glasses: filterWineOnClick });\r\n    this.setState({ filterTermsWithId: termsToArray1 });\r\n    this.setState({ filteredWines: difference });\r\n    this.setState({ unMutable: filterWineOnClick });\r\n  };\r\n  //clearnig all filters\r\n  onClear() {\r\n    const unFilteredWines1 = this.state.unFilteredWines;\r\n\r\n    this.setState({ glasses: unFilteredWines1 });\r\n    this.setState({ filterTerms: [] });\r\n    this.setState({ filterTermsWithId: [] });\r\n    this.setState({ filteredWines: [] });\r\n    this.setState({ unMutable: unFilteredWines1 });\r\n  }\r\n  //sorting wines such as by color or status\r\n  onSort = (event) => {\r\n    const glasses = this.state.glasses;\r\n    let termy = event.target.id;\r\n\r\n    if (termy === \"status\") {\r\n      const order = {\r\n        removed: 1,\r\n        added: 2,\r\n        none: 3,\r\n        hidden: 4,\r\n      };\r\n      const sorted = glasses.sort((a, b) => order[a.status] - order[b.status]);\r\n      if (this.state.statusSort === false) {\r\n        sorted.reverse();\r\n      }\r\n      this.setState({ glasses: sorted });\r\n      this.setState((state) => ({ statusSort: !this.state.statusSort }));\r\n      this.setState({ colorSort: true });\r\n      this.setState({ priceSort: true });\r\n      this.setState({ yearSort: true });\r\n    }\r\n    if (termy === \"color\") {\r\n      const order = {\r\n        red: 1,\r\n        white: 2,\r\n        sparkling: 3,\r\n        dessert: 4,\r\n      };\r\n      const sorted = glasses.sort((a, b) => order[a.color] - order[b.color]);\r\n      if (this.state.colorSort === false) {\r\n        sorted.reverse();\r\n      }\r\n      this.setState({ glasses: sorted });\r\n      this.setState((state) => ({ colorSort: !this.state.colorSort }));\r\n      this.setState({ statusSort: true });\r\n      this.setState({ priceSort: true });\r\n      this.setState({ yearSort: true });\r\n      this.setState({ unMutable: sorted });\r\n    }\r\n    if (termy === \"year\") {\r\n      const sorted = glasses.sort(function (a, b) {\r\n        var yearA = a.year;\r\n        var yearB = b.year;\r\n        if (yearA < yearB) {\r\n          return -1;\r\n        }\r\n        if (yearA > yearB) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n      });\r\n      if (this.state.yearSort === false) {\r\n        sorted.reverse();\r\n      }\r\n      this.setState({ glasses: sorted });\r\n      this.setState({ unMutable: sorted });\r\n      this.setState({ colorSort: true });\r\n      this.setState({ statusSort: true });\r\n      this.setState({ priceSort: true });\r\n      this.setState((state) => ({ yearSort: !this.state.yearSort }));\r\n    }\r\n    if (termy === \"price\") {\r\n      const sorted = glasses.sort(function (a, b) {\r\n        var priceA = a.price;\r\n        var priceB = b.price;\r\n        if (priceA < priceB) {\r\n          return -1;\r\n        }\r\n        if (priceA > priceB) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n      });\r\n      if (this.state.priceSort === false) {\r\n        sorted.reverse();\r\n      }\r\n      this.setState({ glasses: sorted });\r\n      this.setState({ unMutable: sorted });\r\n      this.setState({ colorSort: true });\r\n      this.setState({ statusSort: true });\r\n      this.setState({ yearSort: true });\r\n      this.setState((state) => ({ priceSort: !this.state.priceSort }));\r\n    }\r\n  };\r\n\r\n  //hides recently removed wines. Great for a new employee who\r\n  //is learning the list for the first time\r\n  hideRemovedClick = (event) => {\r\n    this.setState((state) => ({ hideRemoved: !this.state.hideRemoved }));\r\n  };\r\n\r\n  //hidden wines are wines that used to be on the list but have\r\n  //been off for a while. This hides and shows them\r\n  unHideHiddenClick = (event) => {\r\n    this.setState((state) => ({ unHideHidden: !this.state.unHideHidden }));\r\n  };\r\n\r\n  //still working on a way to filter by price ranges. This is\r\n  //not completed yet\r\n  priceCheck = (state) => {\r\n    const glasses = this.state.unMutable;\r\n    this.setState({ checkStates: state });\r\n    this.priceChange(glasses);\r\n  };\r\n  //still working on a way to filter by price ranges. This is\r\n  //not completed yet\r\n  priceChange(x) {\r\n    let arr = [];\r\n    const checkStates = this.state.checkStates;\r\n    const glasses2 = x;\r\n    console.log(x);\r\n\r\n    if (\r\n      checkStates.zero === false &&\r\n      checkStates.twentyone === false &&\r\n      checkStates.thirtyone === false &&\r\n      checkStates.fortyone === false\r\n    ) {\r\n      this.setState({ glasses: glasses2 });\r\n    } else {\r\n      if (checkStates.zero === true) {\r\n        const glasses = glasses2;\r\n        const zero = glasses.filter((wine) => wine.price < 21);\r\n        arr.push(zero);\r\n      }\r\n      if (checkStates.twentyone === true) {\r\n        const glasses = glasses2;\r\n        const twentyone = glasses.filter(\r\n          (wine) => wine.price >= 21 && wine.price < 31\r\n        );\r\n        arr.push(twentyone);\r\n      }\r\n      if (checkStates.thirtyone === true) {\r\n        const glasses = glasses2;\r\n        const thirtyone = glasses.filter(\r\n          (wine) => wine.price >= 31 && wine.price < 41\r\n        );\r\n        arr.push(thirtyone);\r\n      }\r\n      if (checkStates.fortyone === true) {\r\n        const glasses = glasses2;\r\n        const fortyone = glasses.filter((wine) => wine.price >= 41);\r\n        arr.push(fortyone);\r\n      }\r\n\r\n      const flat = arr.flat();\r\n      console.log(flat);\r\n      this.setState({ glasses: flat });\r\n    }\r\n    // if (this.state.glasses !== prevProps.glasses) {\r\n    // if (this.state.checkStates !== prevProps.checkStates) {\r\n    //   if (this.state.glasses !== prevState.glasses) {\r\n    //     console.log(\"dude\");\r\n    //   }\r\n    // }\r\n    // if (\r\n    //   checkStates.zero === false &&\r\n    //   checkStates.twentyone === false &&\r\n    //   checkStates.thirtyone === false &&\r\n    //   checkStates.fortyone === false\r\n    // ) {\r\n    //   this.setState({ glasses: glasses2 });\r\n    // }\r\n    // else {\r\n    //   if (checkStates.zero === true) {\r\n    //     const glasses = glasses2;\r\n    //     const zero = glasses.filter((wine) => wine.price < 21);\r\n    //     arr.push(zero);\r\n    //   }\r\n    //   if (checkStates.twentyone === true) {\r\n    //     const glasses = glasses2;\r\n    //     const twentyone = glasses.filter(\r\n    //       (wine) => wine.price >= 21 && wine.price < 31\r\n    //     );\r\n    //     arr.push(twentyone);\r\n    //   }\r\n    //   if (checkStates.thirtyone === true) {\r\n    //     const glasses = glasses2;\r\n    //     const thirtyone = glasses.filter(\r\n    //       (wine) => wine.price >= 31 && wine.price < 41\r\n    //     );\r\n    //     arr.push(thirtyone);\r\n    //   }\r\n    //   if (checkStates.fortyone === true) {\r\n    //     const glasses = glasses2;\r\n    //     const fortyone = glasses.filter((wine) => wine.price >= 41);\r\n    //     arr.push(fortyone);\r\n    //   }\r\n\r\n    //   const flat = arr.flat();\r\n    //   this.setState({ glasses: flat });\r\n    // }\r\n    // }\r\n  }\r\n  ///render portion\r\n\r\n  //\r\n  //\r\n  //\r\n  //\r\n\r\n  render() {\r\n    const allInfo = this.state.allInfo;\r\n\r\n    if (allInfo.length === 0) {\r\n      return (\r\n        <div className=\"App\">\r\n          <CircularDeterminate />\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"App\">\r\n          <TempDrawer\r\n            onClear={this.onClear}\r\n            onSort={this.onSort}\r\n            glasses={this.state.glasses}\r\n            unFilteredWines={this.state.unFilteredWines}\r\n            onSearchSelect={this.onSearchSelect}\r\n            allInfo={this.state.allInfo}\r\n            hideRemovedClick={this.hideRemovedClick}\r\n            filterTerms={this.state.filterTerms}\r\n            unHideHidden={this.state.unHideHidden}\r\n            unHideHiddenClick={this.unHideHiddenClick}\r\n            onRemoveFilterTerms={this.onRemoveFilterTerms}\r\n            onSelect={this.onSelect}\r\n            filterTermsWithId={this.state.filterTermsWithId}\r\n            priceCheck={this.priceCheck}\r\n            onSelect={this.onSelect}\r\n          />\r\n\r\n          {/* <AppBarSearch\r\n          allInfo={this.state.allInfo} /> */}\r\n          <MobileBlocksData\r\n            glasses={this.state.glasses}\r\n            wines={this.state.filteredWines}\r\n            onSelect={this.onSelect}\r\n            onClear={this.onClear}\r\n            curItem={this.state.curItem}\r\n            mappedGlasses={this.state.mappedGlasses}\r\n            hideRemoved={this.state.hideRemoved}\r\n            onCoravinSearch={this.onCoravinSearch}\r\n            unHideHiddenClick={this.unHideHiddenClick}\r\n            unHideHidden={this.state.unHideHidden}\r\n            priceCheck={this.priceCheck}\r\n            checkStates={this.state.checkStates}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}